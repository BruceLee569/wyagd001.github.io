<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>Map 对象 - 方法 &amp; 属性 | AutoHotkey v2</title>
<meta name="description" content="A Map object associates or maps one set of values, called keys, to another set of values." />
<meta name="ahk:equiv-v1" content="objects/Object.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>Map 对象</h1>

<p><strong>Map(映射)</strong> 对象将一组称为 <em>键</em> 的值关联或 <em>映射</em> 到另一组值. 键及其映射到的值称为键-值对. 映射可以包含任意数量的键值对, 但是每个键必须是惟一的.</p>
<p>键可以是任何<a href="../Concepts.htm#numbers">整数</a>, <a href="../Objects.htm">对象</a> 引用以 null 结尾的<a href="../Concepts.htm#strings">字符串</a>. 字符串键的比较是区分大小写的, 而对象是通过引用/地址进行比较的. <a href="../Concepts.htm#numbers">浮点数</a>键被自动转换成字符串.</p>
<p>映射的最简单用法是通过隐式的 <a href="#__Item">__Item</a> 属性检索或设置键-值对, 只需在映射对象后面的方括号中写入键. 例如:</p>
<pre>clrs := Map()
clrs["Red"] := "ff0000"
clrs["Green"] := "00ff00"
clrs["Blue"] := "0000ff"
for clr in Array("Blue", "Green")
    MsgBox clrs[clr]
</pre>
<p>下面的文档使用 <code>aMap</code> 作为任何映射对象的占位符. 注意, "map" 不应该用作变量名, 因为它是用来引用 Map 类本身.</p>
<p>Map 对象基于 <code>Map.Prototype</code>, 其又基于 <code>Object.Prototype</code>. 除了继承自 <a href="Object.htm">Object</a> 的方法和属性外, 映射对象还具有以下预定义的方法和属性:</p>

<p><strong>方法:</strong></p>
<ul>
  <li><a href="#Clear">Clear</a></li>
  <li><a href="#Clone">Clone</a></li>
  <li><a href="#Delete">Delete</a></li>
	<li><a href="#Has">Has</a></li>
  <li><a href="#__Enum">__Enum</a></li>
</ul>
<p><strong>属性:</strong></p>
<ul>
  <li><a href="#Count">Count</a></li>
	<li><a href="#Capacity">Capacity</a></li>
  <li><a href="#__Item">__Item</a></li>
</ul>

<h2>方法</h2>

<div class="methodShort" id="Clear"><h2>Clear</h2>
<p>从映射中删除所有键-值对.</p>
<pre class="Syntax">aMap.<span class="func">Clear</span>()</pre>
</div>

<div class="methodShort" id="Clone"><h2>Clone</h2>
<p>返回对象的一个浅拷贝.</p>
<pre class="Syntax">Clone := aMap.<span class="func">Clone</span>()</pre>
<p>所有键-值对都被复制到新映射. 对象 <em>引用</em> 被复制(就像普通的赋值一样), 而不是对象本身.</p>
<p>根据 <a href="Object.htm#Clone">Obj.Clone</a> 来复制自有的属性, 方法和基.</p>
</div>

<div class="methodShort" id="Delete"><h2>Delete</h2>
<p>从映射中删除键-值对.</p>
<pre class="Syntax">aMap.<span class="func">Delete</span>(Key)</pre>
<dl>
  <dt>Key</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a>, <a href="../Objects.htm">对象</a>或<a href="../Concepts.htm#strings">字符串</a></p>
    <p>任意一个键. 如果映射不包含此键, 则抛出异常.</p>
  </dd>
  <dt>返回值</dt>
  <dd><p>删除的值.</p></dd>
</dl>
</div>

<div class="methodShort" id="Has"><h2>Has</h2>
<p>如果 <i>Key</i> 在映射中有关联的值, 则返回 true, 否则返回 false.</p>
<pre class="Syntax">aMap.<span class="func">Has</span>(Key)</pre>
</div>

<div class="methodShort" id="__Enum"><h2>__Enum</h2>
<p>枚举键-值对.</p>
<pre class="Syntax">For Key <span class="optional">, Value</span> in aMap</pre>
<p>返回一个新的<a href="Enumerator.htm">枚举器</a>. 该方法通常不直接调用. 而是将映射对象被直接传递给 <a href="../commands/For.htm">for-loop</a>, 其调用一次 __Enum 然后循环的每次迭代都调用一次枚举器. 每次对枚举器的调用都会返回下一个键和/或值. for-loop 的变量对应于枚举器的参数, 它们是:</p>
<dl>
  <dt>Key</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a>, <a href="../Objects.htm">对象</a>或<a href="../Concepts.htm#strings">字符串</a></p>
    <p>键.</p>
  </dd>
  <dt>Value</dt>
  <dd>
    <p>值.</p>
  </dd>
</dl>
</div>

<h2>属性</h2>

<div class="methodShort" id="Count"><h2>Count</h2>
<p>检索映射中存在的键-值对的数量.</p>
<pre class="Syntax">Count := aMap.<span class="func">Count</span></pre>
</div>

<div class="methodShort" id="Capacity"><h2>Capacity</h2>
<p>检索或设置映射的当前容量.</p>
<pre class="Syntax">aMap.<span class="func">Capacity</span> := MaxItems</pre>
<pre class="Syntax">MaxItems := aMap.<span class="func">Capacity</span></pre>
<dl>
	<dt>MaxItems</dt>
	<dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>在必须自动扩展前, 映射可以包含的最大键-值对数量. 如果设置的值小于当前键-值对数量, 则使用设置的值并释放未使用的空间.</p>
  </dd>
</dl>
</div>

<div class="methodShort" id="__Item"><h2>__Item</h2>
<p>检索或更新键-值对的值.</p>
<pre class="Syntax">Value := aMap[Key]</pre>
<pre class="Syntax">aMap[Key] := Value</pre>
<dl>
  <dt>Key</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a>, <a href="../Objects.htm">对象</a>或<a href="../Concepts.htm#strings">字符串</a></p>
    <p>检索值时, <em>Key</em> 必须是先前与另一个值相关联的唯一值. 如果 <em>Key</em> 在映射中没有关联的值, 则抛出异常.</p>
    <p>当赋值时, <em>Key</em> 可以是与 <em>Value</em> 相关联的任何值; 换句话说, <em>key</em> 用于以后访问 <em>Value</em>. <a href="../Concepts.htm#numbers">浮点数</a>键被自动转换成字符串.</p>
  </dd>
</dl>
<p></p>
<p>如上所示, 属性名 __Item 通常被省略, 但在覆盖属性时使用.</p>
</div>

</body>
</html>