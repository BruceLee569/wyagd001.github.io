<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>操纵杆测试 - 脚本示例 | AutoHotkey v2</title>
<meta name="description" content="The joystick test script helps determine the button numbers and other attributes of your joystick, and may indicate if your joystick needs calibration." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>操纵杆测试脚本</h1>

<p>此脚本帮助您判断操纵杆的按钮数目和其他属性. 它还可能显示您的操纵杆是否需要校准; 即它的每个轴向的活动范围是否在百分之零到百分之百的范围内, 这是它应该处于的范围. 如果需要校准, 请使用操作系统控制面板或操纵杆的自带软件.
</p>
<p><a href="JoystickTest.ahk">下载此脚本</a> &nbsp;| &nbsp;<a href="index.htm">其他示例脚本</a> &nbsp;| &nbsp;<a href="../AutoHotkey.htm">主页</a></p>

<pre class="NoIndent"><em>; July 16, 2016: Revised code for AHK v2 compatibility
; July 6, 2005 : Added auto-detection of joystick number.
; May 8, 2005  : Fixed: JoyAxes is no longer queried as a means of
; detecting whether the joystick is connected.  Some joysticks are
; gamepads and don't have even a single axis.</em>

<em>; If you want to unconditionally use a specific joystick number, change
; the following value from 0 to the number of the joystick (1-16).
; A value of 0 causes the joystick number to be auto-detected:</em>
JoystickNumber := 0

<em>; END OF CONFIG SECTION. Do not make changes below this point unless
; you wish to alter the basic functionality of the script.</em>

<em>; Auto-detect the joystick number if called for:</em>
if JoystickNumber &lt;= 0
{
    Loop 16  <em>; Query each joystick number to find out which ones exist.</em>
    {
        if GetKeyState(A_Index "JoyName")
        {
            JoystickNumber := A_Index
            break
        }
    }
    if JoystickNumber &lt;= 0
    {
        MsgBox "The system does not appear to have any joysticks."
        ExitApp
    }
}

#SingleInstance
joy_buttons := GetKeyState(JoystickNumber "JoyButtons")
joy_name := GetKeyState(JoystickNumber "JoyName")
joy_info := GetKeyState(JoystickNumber "JoyInfo")
Loop
{
    buttons_down := ""
    Loop joy_buttons
    {
        if GetKeyState(JoystickNumber "Joy" A_Index)
            buttons_down .= " " A_Index
    }
    axis_info := "X" Round(GetKeyState(JoystickNumber "JoyX"))
    axis_info .= "  Y" Round(GetKeyState(JoystickNumber "JoyY"))
    if InStr(joy_info, "Z")
        axis_info .= "  Z" Round(GetKeyState(JoystickNumber "JoyZ"))
    if InStr(joy_info, "R")
        axis_info .= "  R" Round(GetKeyState(JoystickNumber "JoyR"))
    if InStr(joy_info, "U")
        axis_info .= "  U" Round(GetKeyState(JoystickNumber "JoyU"))
    if InStr(joy_info, "V")
        axis_info .= "  V" Round(GetKeyState(JoystickNumber "JoyV"))
    if InStr(joy_info, "P")
        axis_info .= "  POV" Round(GetKeyState(JoystickNumber "JoyPOV"))
    ToolTip
    (
        joy_name " (#" JoystickNumber "):
        " axis_info "
        Buttons Down:
        " buttons_down "

        (right-click the tray icon to exit)"
    )
    Sleep 100
}
return
</pre>
</body>
</html>