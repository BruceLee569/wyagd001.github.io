<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>StrPut - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The StrPut function copies a string to a memory address, optionally converting it to a given code page." />
<meta name="ahk:equiv-v1" content="commands/StrPutGet.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPut</h1>

<p>复制字符串到内存地址, 可选地转换它到给定的代码页.</p>

<pre class="Syntax"><span class="func">StrPut</span> String <span class="optional">, Encoding := <i>None</i></span> 
<span class="func">StrPut</span> String, Address <span class="optional">, Length</span> <span class="optional">, Encoding := <i>None</i></span> 
</pre>
<h2>参数</h2>
<dl>

  <dt>String</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>任何字符串. 如果给定一个数字, 它将自动转换为字符串.</p>
    <p><em>String</em> 被假定为使用<a href="../Concepts.htm#string-encoding">原生编码</a>.</p>
  </dd>

  <dt>Address</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>字符串将被写入的地址.</p>
  </dd>

  <dt>Length</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>要写入的最大字符数, 需要时包含空终止符.</p>
    <p>如果 <em>Length</em> 为 0 或小于转换后的计划长度(或不需要转换时, 源字符串的长度), 则抛出异常.</p>
  </dd>

  <dt>Encoding</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>目标编码; 例如, <code>"UTF-8"</code>, <code>"UTF-16"</code> 或 <code>"CP936"</code>. 如果 <em>Address</em> 和 <em>Length</em> 都没有指定, 那么数值标识符必须加上 "CP" 前缀. 指定空字符串或 <code>"CP0"</code> 则使用系统默认 ANSI 代码.</p>
  </dd>

</dl>

<h2>返回值</h2>
<p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
<p>函数返回写入的字符数. 如果没有指定 <i>Address</i>, 则返回以字符数表示的必须的缓冲区大小. 如果 <em>Length</em> 准确等于源字符串的长度, 那么字符串不包含空终止符; 否则返回的数目包含空终止符.</p>

<h2>错误处理</h2>
<p>如果检测到无效参数或转换无法执行, 则抛出<a href="Catch.htm#RuntimeErrors">异常</a>.</p>

<h2>备注</h2>
<p>注意, <i>String</i> 参数总是使用当前可执行文件的<a href="../Concepts.htm#string-encoding">原生编码</a>, 而 <i>Encoding</i> 指定写入给定 <i>Address</i> 的字符串的编码. 如果没有指定 <em>Encoding</em>, 则只测量或复制字符串, 而不进行任何转换.</p>
<p>如果需要在代码页之间进行转换, 则所需的缓冲区大小可能与源字符串的大小不同.</p>
<p><em>Length</em> 或 <em>Encoding</em> 都可以直接在 <em>Address</em>后面指定, 但在这种情况下 <em>Encoding</em> 必须是非数字的:</p>
<pre>
StrPut str, address, "cp0"  <em>; 代码页 0, 未指定长度</em>
StrPut str, address, n, 0   <em>; 最大 n 字符, 代码页 0</em>
StrPut str, address, 0      <em>; 不支持</em></pre>

<h2>相关</h2>
<p><a href="../Concepts.htm#string-encoding">字符编码</a>, <a href="StrGet.htm">StrGet</a>, <a href="../Compat.htm">脚本兼容性</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>

<h2>示例</h2>

<h3 id="ex1">示例 #1</h3>
<p>可以调用一次 StrPut 来计算字符串在特殊编码时需要的缓冲区大小, 然后再进行编码并把字符串写入缓冲区. 如果您常用 StrPut 操作变量, 那么考虑把此函数添加到您的<a href="../Functions.htm#lib">库</a>中:</p>
<pre class="NoIndent">StrPutVar(string, ByRef var, encoding)
{
    <em>; 确定容量.</em>
    VarSetCapacity( var, StrPut(string, encoding)
        <em>; StrPut 返回的字符数, 使用 VarSetCapacity 获得需要的字节数.</em>
        * ((encoding="utf-16"||encoding="cp1200") ? 2 : 1) )
    <em>; 复制或转换字符串.</em>
    return StrPut(string, &amp;var, encoding)
}</pre>

</body>
</html>