<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>StrPut - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The StrPut function copies a string to a memory address or buffer, optionally converting it to a given code page." />
<meta name="ahk:equiv-v1" content="commands/StrPutGet.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
</head>
<body>

<h1>StrPut</h1>

<p>复制字符串到内存地址 or buffer, 可选地转换它到给定的代码页.</p>

<pre class="Syntax"><span class="func">StrPut</span> String <span class="optional">, Encoding := <i>None</i></span> 
<span class="func">StrPut</span> String, Target <span class="optional">, Length</span> <span class="optional">, Encoding := <i>None</i></span>
</pre>
<h2>参数</h2>
<dl>

  <dt>String</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>任何字符串. 如果给定一个数字, 它将自动转换为字符串.</p>
    <p><em>String</em> 被假定为使用<a href="../Concepts.htm#string-encoding">原生编码</a>.</p>
  </dd>

  <dt>Target</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#objects">对象</a>或<a href="../Concepts.htm#numbers">整数</a></p>
    <p>A <a href="../objects/Buffer.htm">Buffer</a>-like object or memory address to which the string will be written.</p>
    <p>Any object which implements <a href="../objects/Buffer.htm#Ptr">Ptr</a> and <a href="../objects/Buffer.htm#Size">Size</a> properties may be used, but this function is optimized for the native <a href="../objects/Buffer.htm">Buffer</a> object. Passing an object with these properties ensures that the function does not write memory to an invalid location; that could cause crashes or other unpredictable behaviour.</p>
    <p class="warning"><strong>Note:</strong> If conversion between code pages is necessary, the required buffer size may differ from the size of the source string. For such cases, call StrPut with two parameters to calculate the required size.</p>
  </dd>

  <dt>Length</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
    <p>要写入的最大字符数, 需要时包含空终止符.</p>
    <p>如果 <em>Length</em> 为 0 或小于转换后的计划长度(或不需要转换时, 源字符串的长度), 则抛出异常.</p>
    <p class="warning"><strong>Note:</strong> Specifying the length of <em>String</em> or a substring may be unsafe when <em>Encoding</em> is specified, as conversion may increase the length of the string.</p>
    <p class="warning"><strong>Note:</strong> <em>Length</em> is measured in characters, whereas buffer sizes are usually measured in bytes, as is StrPut's return value. To specify the buffer size in bytes, use a <a href="../objects/Buffer.htm">Buffer</a>-like object in the <em>Target</em> parameter.</p>
  </dd>

  <dt>Encoding</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>目标编码; 例如, <code>"UTF-8"</code>, <code>"UTF-16"</code> 或 <code>"CP936"</code>. 如果 <em>Target</em> 和 <em>Length</em> 都没有指定, 那么数值标识符必须加上 "CP" 前缀. 指定空字符串或 <code>"CP0"</code> 则使用系统默认 ANSI 代码.</p>
  </dd>

</dl>

<h2>返回值</h2>
<p>类型: <a href="../Concepts.htm#numbers">整数</a></p>
<p>函数返回写入的字节数. 如果没有指定 <i>Target</i>, 则返回以字节数表示的必须的缓冲区大小. 如果 <em>Length</em> 准确等于源字符串的长度, 那么字符串不包含空终止符; 否则返回的大小包含空终止符.</p>

<h2>错误处理</h2>
<p>如果检测到无效参数或转换无法执行, 则抛出<a href="Catch.htm#RuntimeErrors">异常</a>.</p>

<h2>备注</h2>
<p>注意, <i>String</i> 参数总是假定使用当前可执行文件的<a href="../Concepts.htm#string-encoding">原生编码</a>, 而 <i>Encoding</i> 指定写入给定 <i>Target</i> 的字符串的编码. 如果没有指定 <em>Encoding</em>, 则只测量或复制字符串, 而不进行任何转换.</p>
<p><em>Length</em> 或 <em>Encoding</em> 都可以直接在 <em>Target</em> 后面指定, 但在这种情况下 <em>Encoding</em> 必须是非数字的:</p>
<pre>
StrPut str, address, "cp0"  <em>; 代码页 0, 未指定长度</em>
StrPut str, address, n, 0   <em>; 最大 n 字符, 代码页 0</em>
StrPut str, address, 0      <em>; 不支持(maximum 0 chars)</em></pre>

<h2>相关</h2>
<p><a href="../Concepts.htm#string-encoding">字符编码</a>, <a href="StrGet.htm">StrGet</a>, <a href="../Compat.htm">脚本兼容性</a>, <a href="FileEncoding.htm">FileEncoding</a>, <a href="DllCall.htm">DllCall</a>, <a href="BufferAlloc.htm">BufferAlloc</a>, <a href="../objects/Buffer.htm">Buffer object</a>, <a href="VarSetCapacity.htm">VarSetCapacity</a></p>

<h2 id="ex1">示例</h2>
<p>StrPut may be called once to calculate the required buffer size for a string in a particular encoding, then again to encode and write the string into the buffer.  The process can be simplified by adding one of these functions to your <a href="../Functions.htm#lib">library</a>:</p>
<pre class="NoIndent"><em>; Returns a <a href="../objects/Buffer.htm">Buffer</a> object containing the string.</em>
StrBuf(string, encoding)
{
    <em>; Calculate required size and allocate a buffer.</em>
    buf := BufferAlloc(StrPut(string, encoding))
    <em>; Copy or convert the string.</em>
    StrPut(string, buf, encoding)
    return buf
}

<em>; Stores the encoded string in a variable and returns a byte count.
; Note: Buffer objects are recommended over variables.</em>
StrPutVar(string, ByRef var, encoding)
{
    <em>; Ensure capacity.</em>
    VarSetCapacity(var, StrPut(string, encoding))
    <em>; Copy or convert the string.</em>
    return StrPut(string, &amp;var, encoding)
}</pre>
</body>
</html>