<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>#Include / #IncludeAgain - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The #Include and #IncludeAgain directives cause the script to behave as though the specified file's contents are present at this exact position." />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>#Include[Again]</h1>

<p>使脚本的行为与指定文件的内容位于此确切位置一样.</p>

<pre class="Syntax"><span class="func">#Include</span> FileOrDirName
<span class="func">#Include</span> &lt;LibName&gt;
<span class="func">#IncludeAgain</span> FileOrDirName</pre>
<h2 id="Parameters">参数</h2>
<dl>

  <dt>FileOrDirName</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>文件或目录的路径, 如下所述. <strong>不能</strong> 包含双引号, 通配符或<a href="../misc/EscapeChar.htm">转义序列</a>(分号 <strong>`;</strong> 除外).</p>
    <p>内置变量以通过将其括在百分号中来使用(例如, <code>#Include %A_ScriptDir%</code>). 不属于有效变量引用的百分号按原义解释. 所有内置变量都是有效的, 除了 <a href="../misc/ErrorLevel.htm">ErrorLevel</a> 和 <a href="../Variables.htm#Args">A_Args</a>.</p>
    <p>已知限制: 编译脚本时, 变量由编译器计算, 并且可能与脚本最终执行时返回的值不同. 编译器支持以下变量: A_AhkPath, A_AppData, A_AppDataCommon, A_ComputerName, A_ComSpec, A_Desktop, A_DesktopCommon, A_IsCompiled, A_LineFile, A_MyDocuments, A_ProgramFiles, A_Programs, A_ProgramsCommon, A_ScriptDir, A_ScriptFullPath, A_ScriptName, A_Space, A_StartMenu, A_StartMenuCommon, A_Startup, A_StartupCommon, A_Tab, A_Temp, A_UserName, A_WinDir.</p>
    <p><strong>File:</strong> 要包含的文件的名称, 如果未指定绝对路径, 则假定在当前文件所在目录. 注意: <a href="SetWorkingDir.htm">SetWorkingDir</a> 对 #Include 没有效果, 因为 #Include 是在脚本开始执行之前处理的.</p>
    <p><strong>Directory:</strong> 指定目录而不是文件, 以更改当前文件中所有后续出现的 #Include 和 <a href="FileInstall.htm">FileInstall</a> 所使用的工作目录. 注意: 以这种方式更改工作目录不会影响脚本开始运行时的初始工作目录(<a href="../Variables.htm#WorkingDir">A_WorkingDir</a>). 要改变这一点, 请在脚本的顶部使用 <a href="SetWorkingDir.htm">SetWorkingDir</a>.</p>
  </dd>

  <dt>LibName</dt>
  <dd>
    <p>类型: <a href="../Concepts.htm#strings">字符串</a></p>
    <p>库文件或函数的名称. 例如, <code>#include &lt;lib&gt;</code> 和 <code>#include &lt;lib_func&gt;</code> 都会包含某个<a href="../Functions.htm#lib">函数库文件夹</a>中的 lib.ahk. <em>LibName</em> 不能包含变量引用.</p>
  </dd>

</dl>
<h2 id="Remarks">备注</h2>
<p>脚本表现得好像包含文件的内容实际出现在 #Include 指令的准确位置(就好像从包含的文件中复制粘贴过来一样). 因此, 它通常不能把两个孤立的脚本合并成一个可运行的脚本.</p>
<p>#Include ensures that <em>FileName</em> is included only once, even if multiple inclusions are encountered for it. By contrast, #IncludeAgain allows multiple inclusions of the same file, while being the same as #Include in all other respects.</p>
<p>The <em>FileName</em> parameter may optionally be preceded by <code>*i</code> and a single space, which causes the program to ignore any failure to read the included file. 例如: <code>#Include *i SpecialOptions.ahk</code>. This option should be used only when the included file's contents are not essential to the main script's operation.</p>
<p>Lines displayed in the main window via <a href="ListLines.htm">ListLines</a> or the menu View-&gt;Lines are always numbered according to their physical order within their own files. In other words, including a new file will change the line numbering of the main script file by only one line, namely that of the #Include line itself (except for <a href="../Scripts.htm#ahk2exe">compiled scripts</a>, which merge their included files into one big script at the time of compilation).</p>
<p>#Include is often used to load <a href="../Functions.htm">functions</a> defined in an external file. Unlike subroutine labels, <a href="../Functions.htm">functions</a> can be included at the very top of the script without affecting the <a href="../Scripts.htm#auto">auto-execute section</a>.</p>
<p>Like other # directives, #Include cannot be executed conditionally. In other words, this example would not work:</p>
<pre>if (x = 1)
    #Include SomeFile.ahk  <em>; This line takes effect regardless of the value of x.</em>
    y := 2  <em>; And this line would belong to the IF above, since # directives cannot belong to IFs.</em></pre>
<p>Files can be automatically included (i.e. without having to use #Include) by calling a <a href="../Functions.htm#lib">library function</a> by name.</p>

<h2 id="Related">相关</h2>
<p><a href="../Functions.htm#lib">Libraries of Functions</a>, <a href="../Functions.htm">Functions</a>, <a href="FileInstall.htm">FileInstall</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a href="#ExBasic">#1</a></p>
<pre>#Include C:\My Documents\Scripts\Utility Subroutines.ahk
#Include %A_ScriptDir%  <em>; 为后续的 #Include 和 FileInstall 改变工作目录.</em>
#Include C:\My Scripts  <em>; 和上面相同, 不过这里指定明确的命名目录.</em></pre>
</div>

</body>
</html>