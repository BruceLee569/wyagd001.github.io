<!DOCTYPE HTML>
<html lang="zh">
<head>
<title>InstallMouseHook - 语法 &amp; 使用 | AutoHotkey v2</title>
<meta name="description" content="The InstallMouseHook function installs or uninstalls the mouse hook." />
<meta name="ahk:equiv-v1" content="commands/_InstallMouseHook.htm" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<link href="../static/theme.css" rel="stylesheet" type="text/css" />
<script src="../static/content.js" type="text/javascript"></script>
<script type="text/javascript">$(function(){0<=window.navigator.userAgent.toLowerCase().indexOf("ucbrowser")&&CaoNiMaDeUc()})</script>
</head>
<body>

<h1>InstallMouseHook</h1>

<p>Installs or uninstalls the mouse hook.</p>
<pre class="Syntax"><span class="func">InstallMouseHook</span> <span class="optional">Install, Force</span></pre>

<h2 id="Parameters">参数</h2>
<dl>

  <dt>Install</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#boolean">Boolean</a></p>
    <p>Omit this parameter or pass true (any non-zero, non-blank value) to require that the hook be installed. Pass false to remove any requirement previously set by this function and potentially uninstall the hook.</p>
  </dd>

  <dt>Force</dt>
  <dd>
    <p>Type: <a href="../Concepts.htm#boolean">Boolean</a></p>
    <p>If <em>Force</em> is true and <em>Install</em> is omitted or true, the hook is uninstalled and reinstalled. This has the effect of giving it precedence over any hooks previously installed by other processes. If the system has stopped calling the hook due to an unresponsive program, reinstalling the hook might get it working again.</p>
    <p>If <em>Force</em> is true and <em>Install</em> is false, the hook is uninstalled even if needed for some other purpose. If a <a href="../Hotkeys.htm">hotkey</a>, <a href="../Hotstrings.htm">hotstring</a> or <a href="InputHook.htm">InputHook</a> requires the hook, it will stop working until the hook is reinstalled. The hook may be reinstalled explicitly by calling this function, or automatically as a side-effect of enabling or disabling a hotkey or calling some other function which requires the hook.</p>
    <p>If <em>Force</em> is false, an internal variable is updated to indicate whether the hook is required by the script, but there might be no immediate change if the hook is required for some other purpose.</p>
  </dd>

</dl>

<h2 id="Remarks">备注</h2>
<p>The mouse hook monitors mouse clicks for the purpose of activating mouse <a href="../Hotkeys.htm">hotkeys</a> and <a href="../Hotstrings.htm#NoMouse">facilitating hotstrings</a>.</p>
<p>AutoHotkey does not install the keyboard and mouse hooks unconditionally because together they consume at least 500 KB of memory (but if the keyboard hook is installed, installing the mouse hook only requires about 50 KB of additional memory; and vice versa). Therefore, the mouse hook is normally installed only when the script contains one or more mouse <a href="../Hotkeys.htm">hotkeys</a>. It is also installed for <a href="../Hotstrings.htm">hotstrings</a>, but that can be disabled via <a href="_Hotstring.htm">#Hotstring NoMouse</a>.</p>
<p>By contrast, the InstallMouseHook function can be used to unconditionally install the mouse hook, which has benefits including:</p>
<ul>
  <li><a href="KeyHistory.htm">KeyHistory</a> can be used to monitor mouse clicks.</li>
  <li><a href="GetKeyState.htm">GetKeyState</a> can retrieve the physical state of a button.</li>
  <li><a href="../Variables.htm#TimeIdleMouse">A_TimeIdleMouse</a> and <a href="../Variables.htm#TimeIdlePhysical">A_TimeIdlePhysical</a> can work correctly (ignoring keyboard input or artificial input, respectively).</li>
</ul>
<p>You can determine whether a script is using the hook via the <a href="KeyHistory.htm">KeyHistory</a> function or menu item. You can determine which hotkeys are using the hook via the <a href="ListHotkeys.htm">ListHotkeys</a> function or menu item.</p>

<h2 id="Related">相关</h2>
<p><a href="InstallKeybdHook.htm">InstallKeybdHook</a>, <a href="_UseHook.htm">#UseHook</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="GetKeyState.htm">GetKeyState</a>, <a href="KeyWait.htm">KeyWait</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> Installs the mouse hook unconditionally.</p>
<pre>InstallMouseHook</pre>
</div>


<p>强制无条件安装鼠标钩子.</p>

<pre class="Syntax"><span class="func">#InstallMouseHook</span></pre>
<h2 id="Remarks">备注</h2>
<p>鼠标钩子监视鼠标单击, 以激活鼠标<a href="../Hotkeys.htm">热键</a>和<a href="../Hotstrings.htm#NoMouse">辅助热字串</a>.</p>
<p>AutoHotkey 不会无条件安装键盘和鼠标钩子, 因为它们合起来至少占用 500 KB 的内存(但如果已经安装键盘钩子, 此时再安装鼠标钩子只需要增加约 50 KB 的内存, 且反之亦然). 因此, 一般只有在脚本包含一个或多个鼠标<a href="../Hotkeys.htm">热键</a>时才会安装鼠标钩子. 还会为<a href="../Hotstrings.htm">热字串</a>进行安装, 不过可以通过 <a href="_Hotstring.htm">#Hotstring NoMouse</a> 来禁用.</p>
<p>与之相比, 使用 #InstallMouseHook 指令会无条件安装鼠标钩子, 这可能有助于允许 <a href="KeyHistory.htm">KeyHistory</a> 监视鼠标单击.</p>
<p>您可以通过 <a href="KeyHistory.htm">KeyHistory</a> 函数或菜单项判断脚本是否使用了钩子. 您可以通过 <a href="ListHotkeys.htm">ListHotkeys</a> 函数或菜单项判断哪个热键使用了钩子.</p>
<p>和其他指令一样, #InstallMouseHook 不能有条件地执行.</p>

<h2 id="Related">相关</h2>
<p><a href="_InstallKeybdHook.htm">#InstallKeybdHook</a>, <a href="_UseHook.htm">#UseHook</a>, <a href="Hotkey.htm">Hotkey</a>, <a href="KeyHistory.htm">KeyHistory</a>, <a href="GetKeyState.htm">GetKeyState</a>, <a href="KeyWait.htm">KeyWait</a></p>
<h2 id="Examples">示例</h2>
<div class="ex" id="ExBasic">
<p><a class="ex_number" href="#ExBasic"></a> 无条件安装鼠标钩子.</p>
<pre>#InstallMouseHook</pre>
</div>

</body>
</html>